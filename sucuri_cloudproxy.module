<?php

/**
 * @file
 * Adds functionality to remotely administer the Sucuri CloudProxy WAF.
 */

/** @var string Permission constant for API key configuration */
const PERM_SET_API_KEYS = 'sucuri cloudproxy set api keys';

/** @var string Permission constant for cache clearing */
const PERM_CLEAR_CACHE  = 'sucuri cloudproxy clear cache';

/** @var string Permission constant for ip filter management */
const PERM_IP_FILTER    = 'sucuri cloudproxy ip filter';

/**
 * Implements hook_help();
 */
function sucuri_cloudproxy_help($path, $arg) {
  if ($path == 'admin/help#sucuri_cloudproxy') {
    return t('Manage your CloudProxy cache & more!');
  }
}

/**
* Implements hook_permission();
*/
function sucuri_cloudproxy_permission() {
  return array(
    PERM_SET_API_KEYS => array(
      'title' => t('Configure API keys'),
      'restrict access' => TRUE,
    ),
    PERM_CLEAR_CACHE => array(
      'title' => t('Clear CDN cache'),
    ),
    PERM_IP_FILTER => array(
      'title' => t('Manage IP filters'),
      'restrict access' => TRUE,
    ),
  );
}

/**
 * Implements hook_menu();
 */
function sucuri_cloudproxy_menu() {
  
  $items = array();
  
  /// api keys configuration
  $items['admin/config/system/sucuri_cloudproxy'] = array(
    'title'            => 'Sucuri Cloud Proxy',
    'description'      => 'Manage Sucuri Cloud Proxy settings.',
    'page callback'    => 'drupal_get_form',
    'page arguments'   => array('sucuri_cloudproxy_config_form'),
    'access arguments' => array(PERM_SET_API_KEYS),
    'type'             => MENU_NORMAL_ITEM,
    'file'             => 'sucuri_cloudproxy_config.admin.inc',
  );

  /// ip filtering
  $items['admin/config/people/sucuri_cloudproxy_ip_filter'] = array(
    'title'            => 'Cloud Proxy IP filtering',
    'description'      => 'Manage blocked IP addresses at the Cloud Proxy firewall.',
    'page callback'    => 'sucuri_cloudproxy_ip_filter_whitelist',
    'access arguments' => array(PERM_IP_FILTER),
    'type'             => MENU_NORMAL_ITEM,
    'file'             => 'sucuri_cloudproxy_ip.admin.inc'
  );

  /// whitelist management
  $items['admin/config/people/sucuri_cloudproxy_ip_filter/whitelist'] = array(
    'title' => 'IP Whitelist',
    'description'      => 'Manage allowed IP addresses at the Cloud Proxy firewall.',
    'access arguments' => array(PERM_IP_FILTER),
    'type'  => MENU_DEFAULT_LOCAL_TASK,
    'file' => 'sucuri_cloudproxy_ip.admin.inc',
    'weight' => -1,
  );

  /// accessibility fallback for deleting whitelist entries
  $items['admin/config/people/sucuri_cloudproxy_ip_filter/whitelist/delete/nojs/%'] = array(
    'page callback'   => 'sucuri_cloudproxy_ip_filter_whitelist_delete',
    'page arguments'  => array(6, 7),
    'access arguments' => array(PERM_IP_FILTER),
    'type'            => MENU_CALLBACK,
    'file'            => 'sucuri_cloudproxy_ip.admin.inc'
  );

  /// ajax mechanism for deleting whitelist entries
  $items['admin/config/people/sucuri_cloudproxy_ip_filter/whitelist/delete/ajax/%'] = array(
    'delivery callback' => 'ajax_deliver',
  ) + $items['admin/config/people/sucuri_cloudproxy_ip_filter/whitelist/delete/nojs/%'];

  /// blacklist management
  $items['admin/config/people/sucuri_cloudproxy_ip_filter/blacklist'] = array(
    'title' => 'IP Blacklist',
    'description'      => 'Manage blocked IP addresses at the Cloud Proxy firewall.',
    'page callback'    => 'sucuri_cloudproxy_ip_filter_blacklist',
    'access arguments' => array(PERM_IP_FILTER),
    'type'  => MENU_LOCAL_TASK,
    'file' => 'sucuri_cloudproxy_ip.admin.inc',
  );

  /// accessibility fallback for deleting blacklist entries
  $items['admin/config/people/sucuri_cloudproxy_ip_filter/blacklist/delete/nojs/%'] = array(
    'page callback'   => 'sucuri_cloudproxy_ip_filter_blacklist_delete',
    'page arguments'  => array(6, 7),
    'access arguments' => array(PERM_IP_FILTER),
    'type'            => MENU_CALLBACK,
    'file'            => 'sucuri_cloudproxy_ip.admin.inc'
  );

  /// ajax mechanism for deleting blacklist entries
  $items['admin/config/people/sucuri_cloudproxy_ip_filter/blacklist/delete/ajax/%'] = array(
    'delivery callback' => 'ajax_deliver',
  ) + $items['admin/config/people/sucuri_cloudproxy_ip_filter/blacklist/delete/nojs/%'];

  $items['admin/config/people/sucuri_cloudproxy_ip_filter/add/nojs/%'] = array(
    'access arguments' => array(PERM_IP_FILTER),
    'type' => MENU_CALLBACK,
    'file' => 'sucuri_cloudproxy_ip.admin.inc'
  );

  $items['admin/config/people/sucuri_cloudproxy_ip_filter/add/ajax/%'] = array(
      'delivery callback' => 'ajax_deliver',
  ) + $items['admin/config/people/sucuri_cloudproxy_ip_filter/add/nojs/%'];

  return $items;
}

/**
 * Implements hook_form_alter();
 */
function sucuri_cloudproxy_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'system_performance_settings') {
      $form = array('sucuri_cloudproxy_cache_clear' => array(
      '#type' => 'fieldset',
      '#title' => t('Cloud Proxy'),
      '#description' => t('Please note that it may take several minutes for your Cloud Proxy cache to flush globally.'),
      '#collapsible' => TRUE,
      '#collapsed' => FALSE,
      'file' => array(
        '#type' => 'textfield',
        '#title' => t('Purge specific file'),
        '#description' => t('If left blank, all files will be purged.'),
      ),
      'clear' => array(
        '#type' => 'submit',
        '#value' => t('Flush Cache'),
        '#submit' => array('sucuri_cloudproxy_clear_cache_submit'),
      ),
    )) + $form;
  }
}

/**
 * Invoked when a user clicks the 'Flush Cache' button.
 */
function sucuri_cloudproxy_clear_cache_submit($form, &$form_state) {
  if(!variable_get('sucuri_cloudproxy_site_key') || !variable_get('sucuri_cloudproxy_secret_key')) {
    drupal_set_message(t('A valid set of API keys must be configured prior to using this feature.'), 'warning');
    drupal_goto('admin/config/system/sucuri_cloudproxy');
    return;
  }

  module_load_include('inc', 'sucuri_cloudproxy', 'sucuri_cloudproxy_api.admin');
  
  /// No validation required - all input is urlencoded and passed to Sucuri
  $file = isset($form_state['values']['file']) ? 
          $form_state['values']['file'] : null;
  
  sucuri_cloudproxy_api_clear_cache($file);
}
