<?php

/**
 * Help function for the sucuri_cloudproxy module
 * 
 * @param $path string the path that is being visited for help
 * 
 * @param $arg
 */
function sucuri_cloudproxy_help($path, $arg) {
    if ($path == 'admin/help#sucuri_cloudproxy') {
        return t('Manage your CloudProxy CDN cache!');
    }
}

/**
 * Adds various fields to the <em>sucuri_cloudproxy_form</em> form
 * 
 * @param $form array the form that is being added to
 * 
 * @param &$form_state array the state of the form that is being added to
 */
function sucuri_cloudproxy_form($form, &$form_state) {
    $form['sucuri_cloudproxy_site_key'] = array(
        '#type'          => 'textfield',
        '#title'         => t('Sucuri Cloud Proxy Site Key'),
        '#default_value' => variable_get('sucuri_cloudproxy_site_key'),
        '#size'          => 32,
        '#maxlength'     => 32,
        '#description'   => t('The site key issued by Sucuri for this domain.'),
        '#required'      => true        
    );
    
    $form['sucuri_cloudproxy_secret_key'] = array(
        '#type'          => 'textfield',
        '#title'         => t('Sucuri Cloud Proxy Secret Key'),
        '#default_value' => variable_get('sucuri_cloudproxy_secret_key'),
        '#size'          => 32,
        '#maxlength'     => 32,
        '#description'   => t('The secret key issued by Sucuri for this domain.'),
        '#required'      => true
    );
    
    return system_settings_form($form);
}

/**
 * Performs validation on all submitted form values
 * 
 * @param $form array the form that is being validated
 * 
 * @param &$form_state array the state of the form that is being validated
 */
function sucuri_cloudproxy_form_validate($form, &$form_state) {
    foreach (array(
        'sucuri_cloudproxy_site_key' => 'site key', 
        'sucuri_cloudproxy_secret_key' => 'secret key') as $k => $v) {
        if(!preg_match('/^[a-fA-F0-9]{32}$/', $form_state['values'][$k])) {
            form_set_error($k, t('Your @field should be a 32 character long hexadecimal string.', array('@field' => $v)));
        }
    }
}

/**
 * Invoked when a user clicks the 'Flush CDN Cache' button
 */
function sucuri_cloudproxy_clear_cache_submit() {

    if (!function_exists('curl_version')) {
        drupal_set_message(t('Sorry, but cURL must be installed and enabled in order to utilize this functionality.'), 'error');
        return;
    }
    
    $handle = curl_init();    
    if ($handle === false) {
        drupal_set_message(t('Sorry, but something went wrong while flushing your CDN cache.'), 'error');
        watchdog('sucuri_cloudproxy', t('cURL failed to initialize on line @line in @file: @error', array('@line' => __LINE__, '@file' => __FILE__, '@error' => curl_error($handle))), WATCHDOG_ERROR);
        return;
    }
    
    $query = http_build_query(array(
        'k' => variable_get('sucuri_cloudproxy_site_key'),
        's' => variable_get('sucuri_cloudproxy_secret_key'),
        'a' => 'clear_cache'
    ));
        
    if (curl_setopt_array($handle, array(
        CURLOPT_URL            => 'https://waf.sucuri.net/api?v2',
        CURLOPT_POST           => 3,
        CURLOPT_POSTFIELDS     => $query,
        CURLOPT_HEADER         => false,
        CURLOPT_PORT           => 443,
        CURLOPT_RETURNTRANSFER => true
    )) === false) {
        drupal_set_message(t('Sorry, but something went wrong while flushing your CDN cache.'), 'error');
        watchdog('sucuri_cloudproxy', t('cURL failed to set options on line @line in @file: @error', array('@line' => __LINE__, '@file' => __FILE__, '@error' => curl_error($handle))), WATCHDOG_ERROR);
        return;
    }
    
    $response = curl_exec($handle);
    if ($response === false) {
        drupal_set_message(t('Sorry, but something went wrong while flushing your CDN cache.'), 'error');
        watchdog('sucuri_cloudproxy', t('cURL failed to execute on line @line in @file: @error', array('@line' => __LINE__, '@file' => __FILE__, '@error' => curl_error($handle))), WATCHDOG_ERROR);
        return;
    }

    $result = json_decode($response, true);
    
    if (!$result['status']) {
        $messages = implode('/', $result['messages']);
        drupal_set_message(t('Sorry, but something went wrong while flushing your CDN cache: @messages', array('@messages' => $messages)), 'error');
        return;
    }
    drupal_set_message(t('Your CDN cache has began to flush.  Please note that it may take several minutes to propagate worldwide.'));
}

/**
 * Modifies the <em>system_performance_Settings</em> form by adding a new fieldset.
 * 
 * @param &$form array the form that may be altered
 * 
 * @param &$form_state array the state of the form
 * 
 * @param $form_id string the id of the form
 */
function sucuri_cloudproxy_form_alter(&$form, &$form_state, $form_id) {
    if ($form_id == 'system_performance_settings') {        
        $form = array('sucuri_cloudproxy_clear_cache' => array(
            '#type' => 'fieldset',
            '#title' => t('Cloud Proxy CDN'),
            '#description' => t('Please note that it may take several minutes for your CDN to flush globally.'),
            'clear' => array(
                '#type' => 'submit',
                '#value' => t('Flush Cloud Proxy CDN'),
                '#submit' => array('sucuri_cloudproxy_clear_cache_submit')
            )
        )) + $form;
    }
}

/**
 * Adds a new configuration menu to the system configuration page
 * 
 * @return array
 */
function sucuri_cloudproxy_menu() {
    return array(
        'admin/config/system/sucuri_cloudproxy' => array(
            'title'            => t('Sucuri Cloud Proxy'),
            'description'      => t('Magage Sucuri Cloud Proxy settings.'),
            'page callback'    => 'drupal_get_form',
            'page arguments'   => array('sucuri_cloudproxy_form'),
            'access arguments' => array('access administration pages'),
            'type'             => MENU_NORMAL_ITEM
        )
    );
}
